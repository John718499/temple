{"version":3,"file":"static/js/208.659225b9.chunk.js","mappings":"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","sources":["pages/register/register.js","services/account-service.js","services/firebase-async.js"],"sourcesContent":["import React from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Button, Form, Col } from 'react-bootstrap';\nimport { RegisterAccount } from '../../services/account-service';\nimport { NotificationManager } from 'react-notifications';\n\nclass Register extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            validated:false,\n        }\n    }\n\n    EmailChange = (email) => {\n        this.setState({ email: email.target.value });\n    }\n\n    PasswordChange = (password) => {\n        this.setState({ password: password.target.value });\n    }\n\n    ConfirmPasswordChange = (confirmPassword) => {\n        this.setState({ confirmPassword: confirmPassword.target.value });\n    }\n\n    EmailInvalid = () => {\n        const emailRule = /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/;\n        return this.state.validated && !emailRule.test(this.state.email);\n    }\n\n    PasswordInvalid = () => {\n        return this.state.validated && this.state.password.length<6;\n    }\n\n    ConfirmPasswordInvalid = () => {\n        return this.state.validated && (this.state.confirmPassword===\"\" || this.state.password !== this.state.confirmPassword);\n    }\n\n    RegisterClick = async (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        await this.setState({validated:true })\n\n        const invalids=[\n            this.EmailInvalid(),\n            this.PasswordInvalid(),\n            this.ConfirmPasswordInvalid(),\n        ]\n\n        if (invalids.some(invaild=>invaild)) return;\n        \n        RegisterAccount(\n            this.state.email,\n            this.state.password,\n            () => {\n                NotificationManager.success('成功', '註冊', 3000);\n                this.props.navigate('/login');\n            },\n            (error) => {\n                if (error.toString().indexOf(\"auth/email-already-in-use\") !== -1) {\n                    NotificationManager.error('電子郵件已註冊', '註冊', 3000);\n                }\n\n                console.log(\"error\", error);\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"mx-auto\" style={{ maxWidth: '330px', width: '100%', padding: '50px 15px 15px 15px' }}>\n                <p className=\"fs-2 text-center\">註冊帳號</p>\n                <Form noValidate onSubmit={this.RegisterClick}>\n                    <div className=\"mb-2\">\n                        <Form.Group className=\"position-relative\" as={Col} md=\"12\" controlId=\"email\">\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                placeholder=\"請輸入電子郵件\"\n                                value={this.state.email}\n                                onChange={this.EmailChange}\n                                isInvalid={this.EmailInvalid()}\n                            />\n                            <Form.Control.Feedback className=\"text-nowrap\" style={{left:\"102%\",top:\"50%\",transform:\"translateY(-50%)\"}} type=\"invalid\" tooltip>{this.state.email===\"\"?\"必填\":\"請輸入Email格式\"}</Form.Control.Feedback>\n                        </Form.Group>\n                    </div>\n                    <div className=\"mb-2\">\n                        <Form.Group className=\"position-relative\" as={Col} md=\"12\" controlId=\"password\">\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"請輸入密碼\"\n                                value={this.state.password}\n                                onChange={this.PasswordChange}\n                                isInvalid={this.PasswordInvalid()}\n                            />\n                            <Form.Control.Feedback className=\"text-nowrap\" style={{left:\"102%\",top:\"50%\",transform:\"translateY(-50%)\"}} type=\"invalid\" tooltip>{this.state.password===\"\"?\"必填\":\"密碼長度需大於6\"}</Form.Control.Feedback>\n                        </Form.Group>\n                    </div>\n                    <div className=\"mb-3\">\n                        <Form.Group className=\"position-relative\" as={Col} md=\"12\" controlId=\"password\">\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"再次確認您的密碼\"\n                                value={this.state.confirmPassword}\n                                onChange={this.ConfirmPasswordChange}\n                                isInvalid={this.ConfirmPasswordInvalid()}\n                            />\n                            <Form.Control.Feedback className=\"text-nowrap\" style={{left:\"102%\",top:\"50%\",transform:\"translateY(-50%)\"}} type=\"invalid\" tooltip>{this.state.confirmPassword===\"\"?\"必填\":\"兩次輸入的密碼必須一致\"}</Form.Control.Feedback>\n                        </Form.Group>\n                    </div>\n                    <div className=\"d-flex justify-content-around\">\n                        <Button className=\"me-1 col-6\" type=\"submit\">註冊</Button>\n                        <Link className=\"btn btn-danger col-6\" to={'./../login'}>返回</Link>\n                    </div>\n                </Form>\n                \n            </div>\n        )\n    }\n}\n\nexport default function RegisterNavigate(props) {\n    const navigate = useNavigate();\n\n    return <Register {...props} navigate={navigate} />;\n}","import { getDatabase, ref, set } from 'firebase/database';\nimport { canActivate, getAsync } from './firebase-async';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\n\nconst auth = getAuth();\nconst db = getDatabase();\n\nexport const CurrentUser = async () => {\n    await canActivate();\n    return auth.currentUser;\n}\n\nexport const RegisterAccount = (email, password, callback, errorCallback) => {\n    createUserWithEmailAndPassword(auth, email, password)\n        .then(AddUser)\n        .then(callback)\n        .catch(errorCallback);\n}\n\nexport const LoginAccount = (email, password, callback, errorCallback) => {\n    signInWithEmailAndPassword(auth, email, password)\n        .then(AddUser)\n        .then(callback)\n        .catch(errorCallback);\n}\n\nexport const Logout = async (callback, errorCallback) => {\n    await canActivate();\n    auth.signOut().then(callback).catch(errorCallback);\n}\n\nexport const AddUser = () => {\n    const currentUser = auth.currentUser;\n    set(ref(db, `users/${currentUser.uid}/email`), currentUser.email);\n}\n\nexport const Auth = async () => {\n    const currentUser = auth.currentUser;\n    await getAsync(ref(db, `users/${currentUser.uid}`))\n        .then((snapshot) => {\n            if (snapshot.exists()) {\n                let userInfo = snapshot.val();\n                localStorage.setItem(\"email\", userInfo.email || false);\n            } else\n                throw new Error('nodata')\n        })\n        .catch(() => localStorage.removeItem(\"email\"))\n\n    await getAsync(ref(db, `isSuperAdmin/${currentUser.uid}`))\n        .then((snapshot) => {\n            if (snapshot.exists())\n                localStorage.setItem(\"isSuperAdmin\", snapshot.val() || false);\n            else\n                throw new Error('nodata')\n        })\n        .catch(() => localStorage.removeItem(\"isSuperAdmin\"))\n\n    await getAsync(ref(db, `isAdmin/${currentUser.uid}`))\n        .then((snapshot) => {\n            if (snapshot.exists())\n                localStorage.setItem(\"isAdmin\", snapshot.val() || false);\n            else\n                throw new Error('nodata')\n        })\n        .catch(() => localStorage.removeItem(\"isAdmin\"))\n\n    await getAsync(ref(db, `isActive/${currentUser.uid}`))\n        .then((snapshot) => {\n            if (snapshot.exists())\n                localStorage.setItem(\"isActive\", snapshot.val() || false);\n            else\n                throw new Error('nodata')\n        })\n        .catch(() => localStorage.removeItem(\"isActive\"))\n}","import { getAuth } from \"firebase/auth\";\nimport { DatabaseReference,DataSnapshot,onValue } from 'firebase/database';\n\nconst auth = getAuth();\n\nexport const canActivate = () => {\n    return new Promise(resolve => {\n        if (auth.currentUser) {\n            resolve(true);\n        } else {\n            const unsubscribe = getAuth().onAuthStateChanged(function (user) {\n                unsubscribe();\n                if (user) {\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            });\n        }\n    });\n}\n\nexport const getAsync = (ref: DatabaseReference): Promise<DataSnapshot>=> {\n    return new Promise((resolve, reject) => {\n        function onError(error) {\n            reject(error);\n        } \n\n        function onData(snap) {\n            resolve(snap);\n        }\n  \n        onValue(ref, onData, onError, { onlyOnce: true });\n    });\n}"],"names":["Register","props","EmailChange","email","setState","target","value","PasswordChange","password","ConfirmPasswordChange","confirmPassword","EmailInvalid","state","validated","test","PasswordInvalid","length","ConfirmPasswordInvalid","RegisterClick","event","preventDefault","stopPropagation","some","invaild","RegisterAccount","NotificationManager","navigate","error","toString","indexOf","console","log","className","style","maxWidth","width","padding","noValidate","onSubmit","this","as","Col","md","controlId","required","type","placeholder","onChange","isInvalid","left","top","transform","tooltip","to","React","RegisterNavigate","useNavigate","auth","getAuth","db","getDatabase","CurrentUser","canActivate","currentUser","callback","errorCallback","createUserWithEmailAndPassword","then","AddUser","catch","LoginAccount","signInWithEmailAndPassword","Logout","signOut","set","ref","uid","Auth","getAsync","snapshot","exists","Error","userInfo","val","localStorage","setItem","removeItem","Promise","resolve","unsubscribe","onAuthStateChanged","user","reject","onValue","snap","onlyOnce"],"sourceRoot":""}