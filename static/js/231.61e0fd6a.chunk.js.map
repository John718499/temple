{"version":3,"file":"static/js/231.61e0fd6a.chunk.js","mappings":"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","sources":["pages/no-match/no-match.js","services/account-service.js","services/firebase-async.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Loading } from '../../components/loading';\r\nimport { CurrentUser } from '../../services/account-service';\r\n\r\nexport default function NoMatch(props){\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(()=>{\r\n        const redirect = async () => {\r\n            const user=await CurrentUser();\r\n            if(user){\r\n                navigate('/join')\r\n            }else{\r\n                navigate('/login')\r\n            }\r\n        }\r\n        \r\n        redirect().catch(console.error);\r\n    })\r\n\r\n    return <Loading />\r\n}","import { getDatabase, ref, set } from 'firebase/database';\r\nimport { canActivate, getAsync } from './firebase-async';\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nconst auth = getAuth();\r\nconst db = getDatabase();\r\n\r\nexport const CurrentUser = async () => {\r\n    await canActivate();\r\n    return auth.currentUser;\r\n}\r\n\r\nexport const RegisterAccount = (email, password, callback, errorCallback) => {\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n        .then(AddUser)\r\n        .then(callback)\r\n        .catch(errorCallback);\r\n}\r\n\r\nexport const LoginAccount = (email, password, callback, errorCallback) => {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n        .then(AddUser)\r\n        .then(callback)\r\n        .catch(errorCallback);\r\n}\r\n\r\nexport const Logout = async (callback, errorCallback) => {\r\n    await canActivate();\r\n    auth.signOut().then(callback).catch(errorCallback);\r\n}\r\n\r\nexport const AddUser = () => {\r\n    const currentUser = auth.currentUser;\r\n    set(ref(db, `users/${currentUser.uid}/email`), currentUser.email);\r\n}\r\n\r\nexport const Auth = async () => {\r\n    const currentUser = auth.currentUser;\r\n    await getAsync(ref(db, `users/${currentUser.uid}`))\r\n        .then((snapshot) => {\r\n            if (snapshot.exists()) {\r\n                let userInfo = snapshot.val();\r\n                localStorage.setItem(\"email\", userInfo.email || false);\r\n            } else\r\n                throw new Error('nodata')\r\n        })\r\n        .catch(() => localStorage.removeItem(\"email\"))\r\n\r\n    await getAsync(ref(db, `isSuperAdmin/${currentUser.uid}`))\r\n        .then((snapshot) => {\r\n            if (snapshot.exists())\r\n                localStorage.setItem(\"isSuperAdmin\", snapshot.val() || false);\r\n            else\r\n                throw new Error('nodata')\r\n        })\r\n        .catch(() => localStorage.removeItem(\"isSuperAdmin\"))\r\n\r\n    await getAsync(ref(db, `isAdmin/${currentUser.uid}`))\r\n        .then((snapshot) => {\r\n            if (snapshot.exists())\r\n                localStorage.setItem(\"isAdmin\", snapshot.val() || false);\r\n            else\r\n                throw new Error('nodata')\r\n        })\r\n        .catch(() => localStorage.removeItem(\"isAdmin\"))\r\n\r\n    await getAsync(ref(db, `isActive/${currentUser.uid}`))\r\n        .then((snapshot) => {\r\n            if (snapshot.exists())\r\n                localStorage.setItem(\"isActive\", snapshot.val() || false);\r\n            else\r\n                throw new Error('nodata')\r\n        })\r\n        .catch(() => localStorage.removeItem(\"isActive\"))\r\n}","import { getAuth } from \"firebase/auth\";\r\nimport { DatabaseReference,DataSnapshot,onValue } from 'firebase/database';\r\n\r\nconst auth = getAuth();\r\n\r\nexport const canActivate = () => {\r\n    return new Promise(resolve => {\r\n        if (auth.currentUser) {\r\n            resolve(true);\r\n        } else {\r\n            const unsubscribe = getAuth().onAuthStateChanged(function (user) {\r\n                unsubscribe();\r\n                if (user) {\r\n                    resolve(true);\r\n                } else {\r\n                    resolve(false);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport const getAsync = (ref: DatabaseReference): Promise<DataSnapshot>=> {\r\n    return new Promise((resolve, reject) => {\r\n        function onError(error) {\r\n            reject(error);\r\n        } \r\n\r\n        function onData(snap) {\r\n            resolve(snap);\r\n        }\r\n  \r\n        onValue(ref, onData, onError, { onlyOnce: true });\r\n    });\r\n}"],"names":["NoMatch","props","navigate","useNavigate","useEffect","redirect","CurrentUser","user","catch","console","error","auth","getAuth","db","getDatabase","canActivate","currentUser","RegisterAccount","email","password","callback","errorCallback","createUserWithEmailAndPassword","then","AddUser","LoginAccount","signInWithEmailAndPassword","Logout","signOut","set","ref","uid","Auth","getAsync","snapshot","exists","Error","userInfo","val","localStorage","setItem","removeItem","Promise","resolve","unsubscribe","onAuthStateChanged","reject","onValue","snap","onlyOnce"],"sourceRoot":""}